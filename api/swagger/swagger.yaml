swagger: "2.0"
info:
  version: "0.0.1"
  title: Elvis API
basePath: /

schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions :
  twitterOauth:    # <---- arbitrary name
    type: oauth2
    flow: implicit
    # The callbackURL registered in Twitter
    authorizationUrl: http://localhost:10010/account/login/twitter/callback
    scopes:
      read: Grants read access
  githubOauth:    # <---- arbitrary name
    type: oauth2
    flow: implicit
    # The callbackURL registered in Github
    authorizationUrl: http://localhost:10010/account/login/github/callback
    scopes:
      read: Grants read access
      user:email: Grants read-only access to user email
paths:
  /swagger.yaml:
    x-swagger-pipe: swagger_raw

  /cpvs:
    x-swagger-router-controller: cpvs
    get:
      tags:
        - cpvs
      description: Returns a list of all cpvs in the db
      operationId: listCpvs
      parameters:
        - name: countries
          in: query
          description: Get only Cpvs from contracts from a certain country
          required: false
          type: array
          items:
            type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/CpvResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /auth/token/refresh:
    x-swagger-router-controller: auth
    post:
      tags:
        - auth
      description: Get new tokens pair using refresh token
      operationId: refreshToken
      parameters:
        - name: x-refresh-token
          type: string
          in: header
          description: Refresh Token
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Bad request ['Refresh token is not provided.', 'Wrong refresh token.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized ['Refresh token expired.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error ['The problem with refresh token check occurred.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /account/password/forgot:
      x-swagger-router-controller: auth
      post:
        tags:
          - auth
        description: Get password reset link on email
        operationId: forgotPassword
        parameters:
          - name: body
            in: body
            description: Body params
            required: true
            schema:
              $ref: "#/definitions/ForgotPasswordRequest"
        responses:
          "204":
            description: Successly sent passport reset email
          "400":
            description: Bad request ['Email is not provided.', 'User is not active.']
            schema:
              $ref: "#/definitions/ErrorResponse"
          "404":
            description: Not found ['User not found.']
            schema:
              $ref: "#/definitions/ErrorResponse"
          "500":
            description: Internal Server Error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /account/password/reset:
    x-swagger-router-controller: auth
    get:
      tags:
        - auth
      description: Verify token and redirect to reset password form
      operationId: getPasswordReset
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Redirect"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - auth
      description: Reset password
      operationId: passwordReset
      parameters:
        - name: body
          in: body
          description: Body params
          required: true
          schema:
            $ref: "#/definitions/ResetPasswordRequest"
      responses:
        "204":
          description: Successfully reset
        "400":
          description: Bad request ['Token is not provided.', 'Wrong token.', 'User is not active.', 'Passwords do not match.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found ['User not found.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /account:
    x-swagger-router-controller: account
    post:
      tags:
        - account
      description: Create a user account and send activation email
      operationId: createAccount
      parameters:
        - name: body
          in: body
          description: Body params
          required: true
          schema:
            $ref: "#/definitions/AccountCredentials"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/AccountCreateResponse"
        "400":
          description: Bad request ['Validation error.', 'The email address is already taken.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - account
      description: Get user account
      operationId: getAccount
      parameters:
        - name: x-access-token
          type: string
          in: header
          description: Bearer access token of the user
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AccountResponse"
        "400":
          description: Bad request ['Wrong access token.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized ['No Access Token.', 'Access token expired.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - account
      description: Delete user account
      operationId: deleteAccount
      parameters:
        - name: x-access-token
          type: string
          in: header
          description: Bearer access token of the user
          required: true
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Bad request ['Wrong access token.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized ['No Access Token.', 'Access token expired.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /account/activate:
    x-swagger-router-controller: account
    get:
      tags:
        - account
      description: Activate account using the activation token sent in email at account creation
      operationId: activateAccount
      parameters:
        - name: t
          in: query
          description: Activation token sent thorough email at account creation
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AccountResponse"
        "400":
          description: Bad request ['Token is not provided', 'Bad token', 'User already active']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found ['User not found']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /account/login:
    x-swagger-router-controller: account
    post:
      tags:
        - login
      description: Log in account using email and password
      operationId: login
      parameters:
        - name: body
          in: body
          description: Body params
          required: true
          schema:
            $ref: "#/definitions/AccountCredentials"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Bad request ['Email is required.', 'Password is required.', 'Validation error.']
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /account/login/twitter:
      x-swagger-router-controller: account
      get:
        tags:
          - login
        description: User login with twitter. If the user doesn't exist it will be created
        operationId: loginWithTwitter
        security:
          - twitterOauth: [read]
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/LoginResponse"
          "500":
            description: Internal Server Error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /account/login/github:
    x-swagger-router-controller: account
    get:
      tags:
        - login
      description: User login with github. If the user doesn't exist it will be created
      operationId: loginWithGithub
      security:
        - githubOauth: [read, user:email]
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  AccountCredentials:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
        description: Valid email address
      password:
        type: string
        description: Password string
  ForgotPasswordRequest:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        format: email
  ResetPasswordRequest:
    type: object
    required:
      - newPassword
      - confirmPassword
    properties:
      newPassword:
        type: string
      confirmPassword:
        type: string
        description: Same as new password
      t:
        type: string
        description: Reset token
  AccountCreateResponse:
    type: object
    required:
      - id
      - email
    properties:
      email:
        type: string
        format: email
        description: Valid email address
      id:
        type: string
        description: User's UUID
  AccountResponse:
    type: object
    allOf:
      - $ref: '#/definitions/AccountCreateResponse'
      - type: object
        properties:
          twitterId:
            type: string
          githubId:
            type: string
          active:
            type: boolean 
  LoginResponse:
    type: object
    required:
      - accessToken
      - refreshToken
    properties:
      accessToken:
        type: string
        description: Access token with short life
      refreshToken:
        type: string
        description: Refresh token with long life

  Redirect:
    properties:
      status:
        type: number
        description: Status number is 302
      location:
        type: string
        description: Redirect url

  CpvResponse:
    type: object
    required:
      - code
    properties:
      code:
        type: string
        description: CPV code
  ErrorResponse:
    type: object
    required:
      - errors
    properties:
      errors:
        type: array
        description: Array of errors encountered in given request
        items:
          type: object
          required:
            - message
          properties:
            message:
              type: string
              description: Error message
